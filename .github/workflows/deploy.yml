name: Deployment

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  package-plugin:
    name: Package Plugin
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          ini-values: error_reporting=E_ALL
          tools: composer, phive
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP Dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --no-dev

      - name: Install Javascript Dependencies
        run: yarn install --frozen-lockfile

      - name: Build App
        run: npm run build

      - name: Build Blocks
        run: npm run build:blocks

      - name: Intall PHP-Scoper
        run: phive --no-progress install humbug/php-scoper --force-accept-unsigned --trust-gpg-keys 74A754C9778AA03AA451D1C1A000F927D67184EE

      - name: Run PHP-Scoper
        run: composer prefix

      - name: Update Composer Autoloader
        run: composer dump-autoload --working-dir build --classmap-authoritative

      - name: Bump Application Version and Tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          default_prerelease_bump: prerelease
          release_branches: master
          pre_release_branches: staging
          append_to_pre_release_tag: prerelease

#      - name: Update Plugin Version
#        run:

      - name: Package The Plugin
        run: npm run package

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          artifacts: './build/communityhive.zip'
          tag: ${{ needs.package-plugin.outputs.new_tag }}
          name: ${{ needs.package-plugin.outputs.new_tag }}
          generateReleaseNotes: true
          makeLatest: true